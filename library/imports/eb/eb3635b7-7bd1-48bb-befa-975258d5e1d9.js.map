{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\CusHttp.js"],"names":["cc","Class","ctor","_http","_callback","Get","Url","cb","console","info","http","loader","getXMLHttpRequest","open","setRequestHeader","onreadystatechange","_result","bind","timeout","send","Post","data","JSON","stringify","log","readyState","status","responseText","parse"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMAA,GAAGC,KAAH,CAAS;AACLC,UAAM,gBAAY;AACd,aAAKC,KAAL;AACA,aAAKC,SAAL;AACH,KAJI;AAKL;;;;;AAKAC,SAAK,aAAUC,GAAV,EAAeC,EAAf,EAAmB;AACpBC,gBAAQC,IAAR,CAAaH,GAAb;AACA,YAAII,OAAOV,GAAGW,MAAH,CAAUC,iBAAV,EAAX;AACAF,aAAKG,IAAL,CAAU,KAAV,EAAiBP,GAAjB,EAAsB,IAAtB;AACAI,aAAKI,gBAAL,CAAsB,cAAtB,EAAqC,0BAArC;AACA,aAAKV,SAAL,GAAiBG,EAAjB;AACAG,aAAKK,kBAAL,GAA0B,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA1B;AACAP,aAAKQ,OAAL,GAAe,KAAf;AACAR,aAAKS,IAAL;AACA,aAAKhB,KAAL,GAAaO,IAAb;AACH,KApBI;AAqBLU,UAAM,cAAUd,GAAV,EAAee,IAAf,EAAqBd,EAArB,EAAyB;AAC3BC,gBAAQC,IAAR,CAAa,wBAAwBH,GAArC;AACAe,eAAOC,KAAKC,SAAL,CAAeF,IAAf,CAAP,CAF2B,CAEA;AAC3Bb,gBAAQgB,GAAR,CAAYH,IAAZ;AACA,YAAIX,OAAOV,GAAGW,MAAH,CAAUC,iBAAV,EAAX;AACAF,aAAKG,IAAL,CAAU,MAAV,EAAkBP,GAAlB,EAAuB,IAAvB;AACAI,aAAKI,gBAAL,CAAsB,cAAtB,EAAqC,gCAArC;AACA,aAAKV,SAAL,GAAiBG,EAAjB;AACAG,aAAKK,kBAAL,GAA0B,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA1B;AACAP,aAAKQ,OAAL,GAAe,KAAf,CAT2B,CASP;AACpBR,aAAKS,IAAL,CAAUE,IAAV;AACA,aAAKlB,KAAL,GAAaO,IAAb;AACH,KAjCI;AAkCLM,aAAS,mBAAY;AACjB;AACA,YAAI,KAAKb,KAAL,CAAWsB,UAAX,IAAyB,CAAzB,IAA8B,KAAKtB,KAAL,CAAWuB,MAAX,IAAqB,GAAvD,EAA4D;AACxDlB,oBAAQgB,GAAR,CAAY,KAAKrB,KAAL,CAAWwB,YAAvB;AACA,gBAAIN,OAAOC,KAAKM,KAAL,CAAW,KAAKzB,KAAL,CAAWwB,YAAtB,CAAX;AACAnB,oBAAQC,IAAR,CAAa,YAAb,EAA2BY,IAA3B;AACA,gBAAI,KAAKjB,SAAT,EAAoB;AAChB;AACA,qBAAKA,SAAL,CAAeiB,IAAf;AACH;AACJ,SARD,MAQO;AACH;AACH;AACJ;AA/CI,CAAT","file":"CusHttp.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n/**\r\n * 新版接口\r\n * @example 使用 var Http = require('Http')\r\n * @example      new Http().Get(url, cb)//url链接 回调函数\r\n * @example      new Http().Post(url, param, cb)//url链接 param参数(json对象) 回调函数\r\n */\r\ncc.Class({\r\n    ctor: function () {\r\n        this._http\r\n        this._callback\r\n    },\r\n    /**\r\n     * Get 请求\r\n     * @param {*} Url \r\n     * @param {*} cb \r\n     */\r\n    Get: function (Url, cb) {\r\n        console.info(Url)\r\n        let http = cc.loader.getXMLHttpRequest();\r\n        http.open(\"GET\", Url, true)\r\n        http.setRequestHeader(\"Content-Type\",\"text/plain;charset=UTF-8\");\r\n        this._callback = cb;\r\n        http.onreadystatechange = this._result.bind(this)\r\n        http.timeout = 10000\r\n        http.send()\r\n        this._http = http\r\n    },\r\n    Post: function (Url, data, cb) {\r\n        console.info(\"post   url ===== > \" + Url)\r\n        data = JSON.stringify(data)//以前不懂要怎么传，是缺少这一步\r\n        console.log(data)\r\n        let http = cc.loader.getXMLHttpRequest();\r\n        http.open(\"POST\", Url, true)\r\n        http.setRequestHeader(\"Content-Type\",\"application/json;charset=UTF-8\");\r\n        this._callback = cb;\r\n        http.onreadystatechange = this._result.bind(this)\r\n        http.timeout = 10000//超时10秒\r\n        http.send(data)\r\n        this._http = http\r\n    },\r\n    _result: function () {\r\n        // console.log(\"this._http.readyState = \" + this._http.readyState + \"  this._http.status = \" + this._http.status)\r\n        if (this._http.readyState == 4 && this._http.status != 500) {\r\n            console.log(this._http.responseText)\r\n            let data = JSON.parse(this._http.responseText)\r\n            console.info('httpCall->', data)\r\n            if (this._callback) {\r\n                //如果服务端有回执text字段，则显示飘字\r\n                this._callback(data)\r\n            }\r\n        } else {\r\n            // console.error('请求失败')\r\n        }\r\n    }\r\n})\r\n"]}